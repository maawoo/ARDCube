Bootstrap: debootstrap
MirrorURL: http://us.archive.ubuntu.com/ubuntu
OSVersion: bionic


%post -c /bin/bash

    ######### UBUNTU #########
    # Set operating system mirror URL
    export MIRRORURL='http://us.archive.ubuntu.com/ubuntu'

    # Set operating system version
    export OSVERSION='bionic'

    # Set system locale
    export LC_ALL=C

    # Set debian frontend interface
    export DEBIAN_FRONTEND='noninteractive'

    # Install system metapackages
    apt-get -y install ubuntu-standard
    apt-get -y install ubuntu-server

    # Add repositories
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION} restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-updates restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-backports restricted"

    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security main"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security universe"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security multiverse"
    add-apt-repository -y "deb ${MIRRORURL} ${OSVERSION}-security restricted"

    # Upgrade all software packages to their latest versions
    apt-get -y update && apt-get -y upgrade

    # Install common packages from 'main'
    apt-get -y install autoconf
    apt-get -y install automake
    apt-get -y install build-essential
    apt-get -y install cmake
    apt-get -y install evince
    apt-get -y install expect
    apt-get -y install gfortran
    apt-get -y install libtool
    apt-get -y install mlocate
    apt-get -y install pkg-config
    apt-get -y install wget
    apt-get -y install zip

    # Cleanup
    apt-get -y autoremove --purge
    apt-get -y clean

    # Update database for mlocate
    updatedb

    
    ######### FORCE #########

    # Install folder
    export INSTALL_DIR='/opt/install/src'
    mkdir -p $INSTALL_DIR

    # Refresh package list & upgrade existing packages 
    apt-get -y update && apt-get -y upgrade

    # Add PPA for Python 3.x
    apt -y install software-properties-common
    add-apt-repository -y ppa:deadsnakes/ppa

    # Install libraries
    apt-get -y install unzip
    apt-get -y install curl
    apt-get -y install git
    apt-get -y install libgdal-dev
    apt-get -y install gdal-bin
    apt-get -y install python-gdal
    apt-get -y install libarmadillo-dev
    apt-get -y install libfltk1.3-dev
    apt-get -y install libgsl0-dev
    apt-get -y install lockfile-progs 
    apt-get -y install rename
    apt-get -y install parallel
    apt-get -y install libfltk1.3-dev
    apt-get -y install apt-utils
    apt-get -y install libgtk2.0-dev
    apt-get -y install pkg-config
    apt-get -y install libavcodec-dev
    apt-get -y install libavformat-dev
    apt-get -y install libswscale-dev
    apt-get -y install python3.8
    apt-get -y install python3-pip

    # Set python aliases for Python 3.x
    alias python='python3'
    alias pip='pip3'

    # NumPy is needed for OpenCV, gsutil for Google downloads
    pip3 install numpy==1.18.1 gsutil

    # Build OpenCV from source
    mkdir -p $INSTALL_DIR/opencv
    cd $INSTALL_DIR/opencv

    wget https://github.com/opencv/opencv/archive/4.1.0.zip && unzip 4.1.0.zip
    mkdir -p $INSTALL_DIR/opencv/opencv-4.1.0/build
    cd $INSTALL_DIR/opencv/opencv-4.1.0/build

    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. && make -j7 && make install && make clean

    # Build FORCE from source
    cd $INSTALL_DIR
    git clone https://github.com/davidfrantz/force.git

    cd $INSTALL_DIR/force

    make -j
    make install
    make clean

    # Cleanup after successfull builds
    rm -rf $INSTALL_DIR
    apt-get purge -y --auto-remove apt-utils cmake git build-essential software-properties-common


%test
    # Add test script to run after %post finished setting up the container.
    #force


%environment

    export MIRRORURL='http://us.archive.ubuntu.com/ubuntu'
    export OSVERSION='bionic'
    export LC_ALL='C'
    export DEBIAN_FRONTEND='noninteractive'
