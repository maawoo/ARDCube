Bootstrap: docker
From: ubuntu:18.04


%files 
    ./pyrosnap /


%post -c /bin/bash

    # Upgrade all software packages to their latest versions
    apt-get -y update && apt-get -y upgrade
    
    # Install some general packages
    apt-get install -y --no-install-recommends --no-install-suggests \
        build-essential \
        wget \
        zip \
        locales \
        && apt-get autoremove -y \
        && apt-get clean -y

    # Set locale 
    locale-gen en_US.UTF-8
    export LANG=en_US.UTF-8
    export LANGUAGE=en_US:en
    export LC_ALL=en_US.UTF-8


    ######### SNAP #########

    # Create directory and move snap files
    mkdir -p /src
    mv /pyrosnap /src

    # SNAP wants the current folder '.' included in LD_LIBRARY_PATH
    export LD_LIBRARY_PATH=".:$LD_LIBRARY_PATH"

    # Install Java
    apt-get install default-jdk maven -y
    export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/"

    # Install SNAP 
    echo -e "######################### \nInstalling SNAP \n#########################"

    # Install and update snap (install parameters in response.varfile!)
    #wget -q -O /src/snap/esa-snap_sentinel_unix_${SNAPVER}_0.sh \
    #    "https://step.esa.int/downloads/${SNAPVER}.0/installers/esa-snap_sentinel_unix_${SNAPVER}_0.sh"
    #sh /src/pyrosnap/esa-snap_sentinel_unix_${SNAPVER}_0.sh -q -varfile /src/pyrosnap/response.varfile
    bash /src/pyrosnap/esa-snap_sentinel_unix_8_0.sh -q -varfile /src/pyrosnap/response.varfile

    # Current workaround for "commands hang after they are actually executed":  
    # https://senbox.atlassian.net/wiki/spaces/SNAP/pages/30539785/Update+SNAP+from+the+command+line
    /opt/snap/bin/snap --nosplash --nogui --modules --update-all 2>&1 | while read -r line; do
        echo "$line"
        [ "$line" = "updates=0" ] && sleep 2 && pkill -TERM -f "snap/jre/bin/java"
    done

    # Set usable memory to 12G
    echo "-Xmx12G" > /opt/snap/bin/gpt.vmoptions


    ######### pyroSAR #########
    echo -e "######################### \nInstalling Conda & pyroSAR \n#########################"

    # Install GDAL
    apt-get install -y \
        python-gdal \
        python3-gdal \
        gdal-bin \
        && apt-get autoremove -y \
        && apt-get clean -y

    # Download latest Miniconda and run install script
    #wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /src/miniconda.sh
    bash /src/pyrosnap/miniconda.sh -bfp /opt/miniconda3/

    # Add to PATH variable
    export PATH="/opt/miniconda3/bin:$PATH"

    # Update / Configs
    conda update -y -n base conda
    conda config --system --prepend channels conda-forge
    conda config --system --set auto_update_conda false
    conda config --system --set show_channel_urls true

    # Install pyroSAR
    conda install -y --channel conda-forge pyroSAR

    # Cleanup
    conda clean -y --all
    apt-get -y autoremove --purge
    apt-get -y clean
    rm -rf /src


%environment
    export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/"
    export LD_LIBRARY_PATH=".:$LD_LIBRARY_PATH"  # not sure if needed after installation
    export PATH="/opt/miniconda3/bin:/opt/snap/bin:$PATH"


%runscript

